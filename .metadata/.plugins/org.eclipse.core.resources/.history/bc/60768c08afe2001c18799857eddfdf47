package com.example.Eccomerce.Controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.Eccomerce.Exception.PedidoExisteException;
import com.example.Eccomerce.Exception.PedidoNaoEcontradoException;
import com.example.Eccomerce.Model.Pedido;
import com.example.Eccomerce.Service.PedidoService;
import com.example.demo.exception.ContaExistenteException;
import com.example.demo.exception.ContaNotException;
import com.example.demo.exception.OperacaoInexistente;
import com.example.demo.exception.SaldoInsuficienteException;
import com.example.demo.model.Conta;

@RestController
@RequestMapping("/pedido")
public class PedidoController {

	@Autowired
	PedidoService service;

	@GetMapping("{numeroPedido}")
	public Pedido getOne(@PathVariable Integer numeroPedido) throws PedidoNaoEcontradoException {
		return service.listarPedido(numeroPedido);
	}

	@PutMapping("/{numeroPedido}")
	public Pedido update(@RequestBody Pedido pedido, @PathVariable Integer numeroPedido)
			throws PedidoNaoEcontradoException, PedidoExisteException {
		return service.editarPedido(pedido, numeroPedido);
	}

	@DeleteMapping("/{numeroPedido}")
	public void delete(@PathVariable Integer numeroPedido) throws PedidoNaoEcontradoException {
		service.deletarPedido(numeroPedido);
	}
	@PostMapping("/{numero}/{operacao}")
	public Conta operation(@PathVariable Integer numero, @PathVariable Integer operacao, @RequestBody Double valor) throws SaldoInsuficienteException, ContaNotException, OperacaoInexistente {
		return service.operacao(numero, operacao, valor);
	}
}
